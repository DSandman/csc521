Program := Statement Program | Statement
Statement := FunctionDeclaration | Assignment | Print
FunctionDeclaration := FUNCTION Name LPAREN FunctionParams LBRACE FunctionBody RBRACE
FunctionParams := NameList RPAREN | RPAREN
FunctionBody := Program Return | Return
Return := RETURN ParameterList
Assignment := SingleAssignment | MultipleAssignment
SingleAssignment := VAR Name ASSIGN Expression
MultipleAssignment := VAR NameList ASSIGN FunctionCall
Print := PRINT Expression
NameList := Name COMMA NameList | Name
ParameterList := Parameter COMMA ParameterList | Parameter
Parameter := Expression | Name
Expression := Term ADD Expression | Term SUB Expression | Term
Term := Factor MULT Term | Factor DIV Term | Factor
Factor := SubExpression EXP Factor | SubExpression | FunctionCall | Value EXP Factor | Value
FunctionCall :=  Name LPAREN FunctionCallParams COLON MyNumber | Name LPAREN FunctionCallParams
FunctionCallParams :=  ParameterList RPAREN | RPAREN
SubExpression := LPAREN Expression RPAREN
Value := Name | MyNumber
Name := IDENT| SUB IDENT | ADD IDENT
MyNumber := NUMBER| SUB NUMBER| ADD NUMBER
NUMBER = #"((\d+(\.\d*)?)|(\.\d+))";
IDENT = #"[a-zA-Z]+[a-zA-Z0-9_]*";
<WS> = #'\s*'| #'\n*'
VAR:=< WS 'var' WS >
FUNCTION:=< WS 'function' WS >
RETURN:=< WS 'return' WS >
PRINT:=< WS 'print' WS >
ASSIGN:=< WS '=' WS >
ADD:=< WS '+' WS >
SUB:=< WS '-' WS >
MULT:=< WS '*' WS >
DIV:=< WS '/' WS >
EXP:=< WS '^' WS >
LPAREN:=< WS '(' WS >
RPAREN:=< WS ')' WS > 
LBRACE:=< WS '{' WS >
RBRACE:=< WS '}' WS >
COMMA:=< WS ',' WS >
COLON:=< WS ':' WS >